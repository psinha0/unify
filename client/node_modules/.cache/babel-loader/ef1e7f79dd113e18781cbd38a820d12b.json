{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sinha\\\\Desktop\\\\Computing Projects\\\\INFS3059\\\\friend-finder\\\\client\\\\src\\\\components\\\\Messaging\\\\ChatInterface.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback, useRef } from 'react';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { sendMessage, receiveMessages, connectSocket, disconnectSocket, markMessagesAsRead, onMessagesRead, onMessageSent, onMessageError } from '../../services/socket';\nimport { getChatHistory, markMessagesAsRead as apiMarkMessagesAsRead } from '../../services/api';\nimport { io } from 'socket.io-client';\nimport '../../styles/chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const {\n    friendId\n  } = useParams();\n  const history = useHistory();\n  const [friend, setFriend] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n  const socket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000');\n  useEffect(() => {\n    // Connect to socket when component mounts\n    connectSocket();\n    const handleReceiveMessage = message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    };\n    receiveMessages(handleReceiveMessage);\n\n    // Notify server that user is online if we have a user ID\n    if (user && user.id) {\n      socket.emit('user_login', user.id);\n    }\n    return () => {\n      // Cleanup the socket connection when component unmounts\n      disconnectSocket();\n    };\n  }, [user]);\n\n  // Load friend details and chat history\n  useEffect(() => {\n    const loadFriendAndChat = async () => {\n      if (!friendId || !user) return;\n      setLoading(true);\n      try {\n        // Import these functions at the top of the file\n        const {\n          getFriendById,\n          getChatHistory\n        } = await import('../../services/api');\n\n        // Get friend details\n        const friendData = await getFriendById(friendId);\n        setFriend(friendData);\n\n        // Get chat history\n        const chatHistory = await getChatHistory(friendId);\n        setMessages(chatHistory);\n      } catch (error) {\n        console.error('Error loading chat data:', error);\n        // Handle error - maybe show error message or redirect\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadFriendAndChat();\n  }, [friendId, user]);\n\n  // Scroll to bottom of messages when they update\n  useEffect(() => {\n    const scrollToBottom = () => {\n      const chatContainer = document.querySelector('.chat-messages');\n      if (chatContainer) {\n        chatContainer.scrollTop = chatContainer.scrollHeight;\n      }\n    };\n    scrollToBottom();\n  }, [messages]);\n  const handleSendMessage = () => {\n    if (newMessage.trim() && user && user.id && friendId) {\n      const messageData = {\n        sender: user.id,\n        recipient: friendId,\n        content: newMessage\n      };\n      sendMessage(messageData);\n\n      // Add message to local state\n      setMessages(prevMessages => [...prevMessages, {\n        sender: user.id,\n        receiver: friendId,\n        content: newMessage,\n        timestamp: new Date(),\n        isSent: true\n      }]);\n      setNewMessage('');\n    }\n  };\n\n  // Handle back button to return to dashboard\n  const handleBack = () => {\n    history.push('/dashboard');\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading chat...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: handleBack,\n        children: \"\\u2190 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), friend && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-friend-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: friend.profilePicture || 'https://via.placeholder.com/40',\n          alt: friend.username,\n          className: \"chat-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-name\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: friend.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: friend.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-messages\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No messages yet. Start the conversation!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this) : messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender === user.id ? 'sent' : 'received'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-time\",\n          children: new Date(msg.timestamp).toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message...\",\n        onKeyPress: e => e.key === 'Enter' && handleSendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        disabled: !newMessage.trim(),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatInterface, \"vtWNf3vuRs/z7uGI1w8T1+p1O8w=\", false, function () {\n  return [useAuth, useParams, useHistory];\n});\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useRef","useAuth","useParams","useHistory","sendMessage","receiveMessages","connectSocket","disconnectSocket","markMessagesAsRead","onMessagesRead","onMessageSent","onMessageError","getChatHistory","apiMarkMessagesAsRead","io","jsxDEV","_jsxDEV","ChatInterface","_s","user","friendId","history","friend","setFriend","messages","setMessages","newMessage","setNewMessage","loading","setLoading","error","setError","messagesEndRef","socket","process","env","REACT_APP_SOCKET_URL","handleReceiveMessage","message","prevMessages","id","emit","loadFriendAndChat","getFriendById","friendData","chatHistory","console","scrollToBottom","chatContainer","document","querySelector","scrollTop","scrollHeight","handleSendMessage","trim","messageData","sender","recipient","content","receiver","timestamp","Date","isSent","handleBack","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","profilePicture","alt","username","location","length","map","msg","index","toLocaleTimeString","hour","minute","type","value","onChange","e","target","placeholder","onKeyPress","key","disabled","_c","$RefreshReg$"],"sources":["C:/Users/sinha/Desktop/Computing Projects/INFS3059/friend-finder/client/src/components/Messaging/ChatInterface.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef } from 'react';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { \n    sendMessage, \n    receiveMessages, \n    connectSocket, \n    disconnectSocket, \n    markMessagesAsRead,\n    onMessagesRead,\n    onMessageSent,\n    onMessageError\n} from '../../services/socket';\nimport { getChatHistory, markMessagesAsRead as apiMarkMessagesAsRead } from '../../services/api';\nimport { io } from 'socket.io-client';\nimport '../../styles/chat.css';\n\nconst ChatInterface = () => {\n    const { user } = useAuth();\n    const { friendId } = useParams();\n    const history = useHistory();\n    const [friend, setFriend] = useState(null);\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState('');\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const messagesEndRef = useRef(null);\n    const socket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000');\n\n    useEffect(() => {\n        // Connect to socket when component mounts\n        connectSocket();\n        \n        const handleReceiveMessage = (message) => {\n            setMessages((prevMessages) => [...prevMessages, message]);\n        };\n\n        receiveMessages(handleReceiveMessage);\n\n        // Notify server that user is online if we have a user ID\n        if (user && user.id) {\n            socket.emit('user_login', user.id);\n        }\n\n        return () => {\n            // Cleanup the socket connection when component unmounts\n            disconnectSocket();\n        };\n    }, [user]);\n    \n    // Load friend details and chat history\n    useEffect(() => {\n        const loadFriendAndChat = async () => {\n            if (!friendId || !user) return;\n            \n            setLoading(true);\n            try {\n                // Import these functions at the top of the file\n                const { getFriendById, getChatHistory } = await import('../../services/api');\n                \n                // Get friend details\n                const friendData = await getFriendById(friendId);\n                setFriend(friendData);\n                \n                // Get chat history\n                const chatHistory = await getChatHistory(friendId);\n                setMessages(chatHistory);\n            } catch (error) {\n                console.error('Error loading chat data:', error);\n                // Handle error - maybe show error message or redirect\n            } finally {\n                setLoading(false);\n            }\n        };\n        \n        loadFriendAndChat();\n    }, [friendId, user]);\n    \n    // Scroll to bottom of messages when they update\n    useEffect(() => {\n        const scrollToBottom = () => {\n            const chatContainer = document.querySelector('.chat-messages');\n            if (chatContainer) {\n                chatContainer.scrollTop = chatContainer.scrollHeight;\n            }\n        };\n        \n        scrollToBottom();\n    }, [messages]);\n\n    const handleSendMessage = () => {\n        if (newMessage.trim() && user && user.id && friendId) {\n            const messageData = {\n                sender: user.id,\n                recipient: friendId,\n                content: newMessage\n            };\n            \n            sendMessage(messageData);\n            \n            // Add message to local state\n            setMessages((prevMessages) => [\n                ...prevMessages, \n                {\n                    sender: user.id,\n                    receiver: friendId,\n                    content: newMessage,\n                    timestamp: new Date(),\n                    isSent: true\n                }\n            ]);\n            \n            setNewMessage('');\n        }\n    };\n\n    // Handle back button to return to dashboard\n    const handleBack = () => {\n        history.push('/dashboard');\n    };\n\n    if (loading) {\n        return (\n            <div className=\"loading-container\">\n                <div className=\"loading-spinner\"></div>\n                <p>Loading chat...</p>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"chat-container\">\n            <div className=\"chat-header\">\n                <button className=\"back-button\" onClick={handleBack}>\n                    &larr; Back\n                </button>\n                \n                {friend && (\n                    <div className=\"chat-friend-info\">\n                        <img \n                            src={friend.profilePicture || 'https://via.placeholder.com/40'} \n                            alt={friend.username} \n                            className=\"chat-avatar\"\n                        />\n                        <div className=\"chat-name\">\n                            <h3>{friend.username}</h3>\n                            <p>{friend.location}</p>\n                        </div>\n                    </div>\n                )}\n            </div>\n            \n            <div className=\"chat-messages\">\n                {messages.length === 0 ? (\n                    <div className=\"no-messages\">\n                        <p>No messages yet. Start the conversation!</p>\n                    </div>\n                ) : (\n                    messages.map((msg, index) => (\n                        <div \n                            key={index} \n                            className={`message ${msg.sender === user.id ? 'sent' : 'received'}`}\n                        >\n                            <div className=\"message-content\">{msg.content}</div>\n                            <div className=\"message-time\">\n                                {new Date(msg.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                            </div>\n                        </div>\n                    ))\n                )}\n            </div>\n            \n            <div className=\"chat-input\">\n                <input\n                    type=\"text\"\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    placeholder=\"Type a message...\"\n                    onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n                />\n                <button onClick={handleSendMessage} disabled={!newMessage.trim()}>Send</button>\n            </div>\n        </div>\n    );\n};\n\nexport default ChatInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}