{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sinha\\\\Desktop\\\\Computing Projects\\\\INFS3059\\\\friend-finder\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { registerUser, loginUser } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      // Use the API service to login\n      const data = await loginUser({\n        email,\n        password\n      });\n\n      // Store token in localStorage\n      localStorage.setItem('token', data.token);\n\n      // Set user info from response\n      setUser(data.user);\n      return data;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = async () => {\n    try {\n      setLoading(true);\n      // Remove token from localStorage\n      localStorage.removeItem('token');\n      setUser(null);\n    } catch (error) {\n      console.error('Logout error:', error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async userData => {\n    try {\n      setLoading(true);\n      // Use the API service to register\n      const data = await registerUser(userData);\n      return data;\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Check if user is logged in when app loads\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      try {\n        setLoading(true);\n        const token = localStorage.getItem('token');\n        if (!token) {\n          setUser(null);\n          return;\n        }\n\n        // Try to get user profile using the token\n        try {\n          const response = await fetch('http://localhost:5000/api/auth/me', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          if (response.ok) {\n            const userData = await response.json();\n            setUser(userData);\n          } else {\n            // Token is invalid or expired\n            localStorage.removeItem('token');\n            setUser(null);\n          }\n        } catch (fetchError) {\n          console.error('Token validation error:', fetchError);\n          // For now, if we can't validate the token (e.g., server is down),\n          // we'll assume it's valid to provide offline functionality\n          setUser({\n            token\n          });\n        }\n      } catch (error) {\n        console.error('Auth check error:', error);\n        localStorage.removeItem('token');\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkLoggedIn();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      logout,\n      register\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"Vot/f62t7wRmBOt67JIN3/+eVxk=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","registerUser","loginUser","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","login","email","password","data","localStorage","setItem","token","error","console","logout","removeItem","register","userData","checkLoggedIn","getItem","response","fetch","headers","ok","json","fetchError","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/sinha/Desktop/Computing Projects/INFS3059/friend-finder/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { registerUser, loginUser } from '../services/api';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    const login = async (email, password) => {\n        try {\n            setLoading(true);\n            // Use the API service to login\n            const data = await loginUser({ email, password });\n            \n            // Store token in localStorage\n            localStorage.setItem('token', data.token);\n            \n            // Set user info from response\n            setUser(data.user);\n            return data;\n        } catch (error) {\n            console.error('Login error:', error);\n            throw error;\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const logout = async () => {\n        try {\n            setLoading(true);\n            // Remove token from localStorage\n            localStorage.removeItem('token');\n            setUser(null);\n        } catch (error) {\n            console.error('Logout error:', error);\n            throw error;\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const register = async (userData) => {\n        try {\n            setLoading(true);\n            // Use the API service to register\n            const data = await registerUser(userData);\n            return data;\n        } catch (error) {\n            console.error('Registration error:', error);\n            throw error;\n        } finally {\n            setLoading(false);\n        }\n    };\n    \n    // Check if user is logged in when app loads\n    useEffect(() => {\n        const checkLoggedIn = async () => {\n            try {\n                setLoading(true);\n                const token = localStorage.getItem('token');\n                \n                if (!token) {\n                    setUser(null);\n                    return;\n                }\n                \n                // Try to get user profile using the token\n                try {\n                    const response = await fetch('http://localhost:5000/api/auth/me', {\n                        headers: {\n                            'Authorization': `Bearer ${token}`\n                        }\n                    });\n                    \n                    if (response.ok) {\n                        const userData = await response.json();\n                        setUser(userData);\n                    } else {\n                        // Token is invalid or expired\n                        localStorage.removeItem('token');\n                        setUser(null);\n                    }\n                } catch (fetchError) {\n                    console.error('Token validation error:', fetchError);\n                    // For now, if we can't validate the token (e.g., server is down),\n                    // we'll assume it's valid to provide offline functionality\n                    setUser({ token }); \n                }\n            } catch (error) {\n                console.error('Auth check error:', error);\n                localStorage.removeItem('token');\n                setUser(null);\n            } finally {\n                setLoading(false);\n            }\n        };\n        \n        checkLoggedIn();\n    }, []);\n\n    return (\n        <AuthContext.Provider value={{ user, loading, login, logout, register }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}