{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sinha\\\\Desktop\\\\Computing Projects\\\\INFS3059\\\\friend-finder\\\\client\\\\src\\\\components\\\\Profile\\\\ProfilePromptsEnhanced.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useAuth } from '../../hooks/useAuth';\nimport { updateUserProfile } from '../../services/api';\nimport '../../styles/profile.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProfilePrompts = ({\n  forNewUser,\n  onComplete\n}) => {\n  _s();\n  const {\n    user,\n    setUser,\n    setIsNewUser\n  } = useAuth();\n  const [currentPrompt, setCurrentPrompt] = useState(null);\n  const [response, setResponse] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n  const [promptIndex, setPromptIndex] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [matchImprovementData, setMatchImprovementData] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // Comprehensive questionnaire for new users (8-10 questions)\n  const newUserPrompts = useMemo(() => [{\n    id: 'communication_style',\n    question: 'How do you prefer to communicate with friends?',\n    options: ['Text messaging', 'Voice calls', 'Video chats', 'In-person meetups', 'Social media'],\n    category: 'socialPreferences',\n    field: 'communicationStyle',\n    importance: 'high',\n    explanation: 'This helps us match you with friends who communicate in similar ways.'\n  }, {\n    id: 'social_energy',\n    question: 'After socializing, do you typically feel:',\n    options: ['Energized and ready for more', 'It depends on the people', 'Drained and needing alone time'],\n    category: 'socialPreferences',\n    field: 'socialEnergy',\n    mapping: {\n      'Energized and ready for more': 'Extrovert',\n      'It depends on the people': 'Ambivert',\n      'Drained and needing alone time': 'Introvert'\n    },\n    importance: 'high',\n    explanation: 'Understanding your social energy helps us find compatible friends.'\n  }, {\n    id: 'weekend_activity',\n    question: 'What\\'s your ideal weekend activity?',\n    options: ['Outdoor adventures', 'Cultural events', 'Relaxing at home', 'Social gatherings', 'Sports', 'Creative projects'],\n    category: 'lifestyle',\n    field: 'weekendPlans',\n    importance: 'high',\n    explanation: 'Shared weekend preferences lead to better friendships.'\n  }, {\n    id: 'friendship_value',\n    question: 'What do you value most in a friendship?',\n    options: ['Loyalty', 'Honesty', 'Similar interests', 'Good conversation', 'Emotional support', 'Fun and humor'],\n    category: 'values',\n    field: 'friendshipValues',\n    importance: 'high',\n    explanation: 'Core values alignment is crucial for lasting friendships.'\n  }, {\n    id: 'activity_level',\n    question: 'How would you describe your activity level?',\n    options: ['Very active (daily exercise)', 'Moderately active (few times a week)', 'Occasionally active', 'Prefer low-activity'],\n    category: 'lifestyle',\n    field: 'activityLevel',\n    importance: 'medium',\n    explanation: 'Activity level compatibility helps with shared activities.'\n  }, {\n    id: 'time_availability',\n    question: 'When are you usually available to hang out?',\n    options: ['Weekday evenings', 'Weekend days', 'Weekend evenings', 'Flexible schedule', 'Lunch breaks'],\n    category: 'lifestyle',\n    field: 'availability',\n    importance: 'medium',\n    explanation: 'Matching schedules makes it easier to spend time together.'\n  }, {\n    id: 'group_size_preference',\n    question: 'Do you prefer hanging out:',\n    options: ['One-on-one', 'Small groups (2-4 people)', 'Medium groups (5-8 people)', 'Large groups (9+ people)', 'No preference'],\n    category: 'socialPreferences',\n    field: 'groupSizePreference',\n    importance: 'medium',\n    explanation: 'Group size preferences help us suggest the right social settings.'\n  }, {\n    id: 'conversation_topics',\n    question: 'What topics do you enjoy discussing most?',\n    options: ['Current events', 'Personal growth', 'Hobbies & interests', 'Work & career', 'Pop culture', 'Deep philosophical topics'],\n    category: 'socialPreferences',\n    field: 'conversationTopics',\n    importance: 'medium',\n    explanation: 'Shared conversation interests lead to more engaging interactions.'\n  }], []);\n\n  // Shorter questionnaire for existing users (2-3 questions)\n  const existingUserPrompts = useMemo(() => [{\n    id: 'recent_interests',\n    question: 'What new interests have you developed lately?',\n    options: ['Fitness & wellness', 'Creative arts', 'Technology', 'Travel planning', 'Cooking', 'Gaming', 'Reading', 'None recently'],\n    category: 'interests',\n    field: 'recentInterests',\n    importance: 'medium',\n    explanation: 'New interests help us find fresh connections.'\n  }, {\n    id: 'friendship_goals',\n    question: 'What are you looking for in new friendships right now?',\n    options: ['Activity partners', 'Deep conversations', 'Casual hangouts', 'Professional networking', 'Study/work buddies'],\n    category: 'socialPreferences',\n    field: 'friendshipGoals',\n    importance: 'high',\n    explanation: 'Understanding your current friendship goals helps us make better matches.'\n  }, {\n    id: 'communication_frequency',\n    question: 'How often do you like to stay in touch with friends?',\n    options: ['Daily check-ins', 'Few times a week', 'Weekly catch-ups', 'Bi-weekly', 'Monthly or less'],\n    category: 'socialPreferences',\n    field: 'communicationFrequency',\n    importance: 'medium',\n    explanation: 'Communication frequency preferences prevent mismatched expectations.'\n  }], []);\n\n  // Memoize the prompts array based on user type\n  const prompts = useMemo(() => {\n    return forNewUser ? newUserPrompts : existingUserPrompts;\n  }, [forNewUser, newUserPrompts, existingUserPrompts]);\n\n  // Calculate progress for new users\n  useEffect(() => {\n    if (forNewUser) {\n      setProgress(Math.round(promptIndex / prompts.length * 100));\n    }\n  }, [promptIndex, prompts.length, forNewUser]);\n\n  // Initialize prompt for user\n  useEffect(() => {\n    if (!user) return;\n    if (forNewUser) {\n      if (promptIndex < prompts.length) {\n        setCurrentPrompt(prompts[promptIndex]);\n        setSubmitted(false);\n        setResponse('');\n      } else {\n        // All prompts completed for new user\n        handleComplete();\n      }\n      return;\n    }\n\n    // For existing users, show prompts occasionally\n    const shouldShowPrompt = () => {\n      const lastPromptTime = localStorage.getItem('lastPromptTime');\n      if (lastPromptTime) {\n        const timeSinceLastPrompt = Date.now() - parseInt(lastPromptTime);\n        const oneDayInMs = 24 * 60 * 60 * 1000;\n        if (timeSinceLastPrompt < oneDayInMs) {\n          return false;\n        }\n      }\n      return Math.random() < 0.3;\n    };\n    if (shouldShowPrompt()) {\n      const answeredPromptIds = JSON.parse(localStorage.getItem('answeredPrompts') || '[]');\n      const eligiblePrompts = prompts.filter(prompt => !answeredPromptIds.includes(prompt.id));\n      if (eligiblePrompts.length > 0) {\n        const randomIndex = Math.floor(Math.random() * eligiblePrompts.length);\n        setCurrentPrompt(eligiblePrompts[randomIndex]);\n        setSubmitted(false);\n        setResponse('');\n      }\n    }\n  }, [user, promptIndex, forNewUser, prompts]);\n  const handleComplete = useCallback(() => {\n    if (setIsNewUser) {\n      setIsNewUser(false);\n    }\n    if (onComplete) {\n      onComplete();\n    }\n\n    // Show match improvement data\n    const improvementData = {\n      questionsAnswered: forNewUser ? prompts.length : 1,\n      matchQualityIncrease: forNewUser ? 45 : 15,\n      newPotentialMatches: forNewUser ? 12 : 3,\n      profileCompleteness: forNewUser ? 85 : (user.profileCompleteness || 60) + 10\n    };\n    setMatchImprovementData(improvementData);\n  }, [setIsNewUser, onComplete, forNewUser, prompts.length, user]);\n  const handleOptionSelect = useCallback(option => {\n    setResponse(option);\n  }, []);\n  const handleSubmit = useCallback(async () => {\n    if (!response || !currentPrompt || loading) return;\n    setLoading(true);\n    try {\n      var _user$currentPrompt$c;\n      const updateData = {};\n\n      // Create nested structure if needed\n      if (!user[currentPrompt.category]) {\n        updateData[currentPrompt.category] = {};\n      } else {\n        updateData[currentPrompt.category] = {\n          ...user[currentPrompt.category]\n        };\n      }\n\n      // Handle mapped values\n      if (currentPrompt.mapping && currentPrompt.mapping[response]) {\n        updateData[currentPrompt.category][currentPrompt.field] = currentPrompt.mapping[response];\n      } else if (Array.isArray((_user$currentPrompt$c = user[currentPrompt.category]) === null || _user$currentPrompt$c === void 0 ? void 0 : _user$currentPrompt$c[currentPrompt.field])) {\n        updateData[currentPrompt.category][currentPrompt.field] = [...(user[currentPrompt.category][currentPrompt.field] || []), response];\n      } else {\n        updateData[currentPrompt.category][currentPrompt.field] = response;\n      }\n\n      // Update user context immediately for responsiveness\n      if (setUser) {\n        setUser(prev => ({\n          ...prev,\n          [currentPrompt.category]: {\n            ...(prev[currentPrompt.category] || {}),\n            [currentPrompt.field]: updateData[currentPrompt.category][currentPrompt.field]\n          }\n        }));\n      }\n\n      // Move to next question immediately, API call in background\n      setSubmitted(true);\n\n      // For new users, move to next prompt quickly\n      if (forNewUser) {\n        setTimeout(() => {\n          setPromptIndex(prev => prev + 1);\n        }, 800); // Reduced from 1500ms\n      } else {\n        // For existing users, show completion\n        setTimeout(() => {\n          handleComplete();\n        }, 1000); // Reduced from 2000ms\n      }\n\n      // API call happens in background\n      await updateUserProfile(updateData);\n\n      // Record answered prompt\n      const answeredPrompts = JSON.parse(localStorage.getItem('answeredPrompts') || '[]');\n      answeredPrompts.push(currentPrompt.id);\n      localStorage.setItem('answeredPrompts', JSON.stringify(answeredPrompts));\n      localStorage.setItem('lastPromptTime', Date.now().toString());\n    } catch (err) {\n      console.error('Error updating profile with prompt response:', err);\n      // Don't block UI for API errors - could show a toast notification instead\n    } finally {\n      setLoading(false);\n    }\n  }, [response, currentPrompt, loading, user, setUser, forNewUser, handleComplete]);\n\n  // Auto-submit when response changes\n  useEffect(() => {\n    if (response && currentPrompt && !submitted) {\n      const timer = setTimeout(() => {\n        handleSubmit();\n      }, 500); // Small delay for user to see selection\n\n      return () => clearTimeout(timer);\n    }\n  }, [response, currentPrompt, submitted, handleSubmit]);\n  const handleSkip = useCallback(() => {\n    if (forNewUser) {\n      setPromptIndex(prev => prev + 1);\n    } else {\n      setCurrentPrompt(null);\n    }\n  }, [forNewUser]);\n\n  // Show match improvement results\n  if (matchImprovementData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"match-improvement-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"improvement-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83C\\uDF89 Great! Your profile just got better!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Here's how your responses are helping us find better matches:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"improvement-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-number\",\n            children: [\"+\", matchImprovementData.matchQualityIncrease, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Match Quality Increase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-number\",\n            children: [\"+\", matchImprovementData.newPotentialMatches]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"New Potential Matches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-number\",\n            children: [matchImprovementData.profileCompleteness, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Profile Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"improvement-explanation\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uD83D\\uDCCA Your answers help our algorithm understand your preferences better. The more you tell us, the better matches we can find!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"continue-button\",\n        onClick: () => setMatchImprovementData(null),\n        children: \"Continue to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }, this);\n  }\n  if (!currentPrompt || !user) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-prompt-container enhanced\",\n    children: [forNewUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionnaire-progress\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Question \", promptIndex + 1, \" of \", prompts.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [progress, \"% complete\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-prompt-card enhanced\",\n      children: !submitted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prompt-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: forNewUser ? '👋 Let\\'s get to know you!' : '💡 Quick Question'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"importance-indicator\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `importance-badge ${currentPrompt.importance}`,\n              children: currentPrompt.importance === 'high' ? '⭐ Important' : '📈 Helpful'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"prompt-question\",\n          children: currentPrompt.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 25\n        }, this), currentPrompt.explanation && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"prompt-explanation\",\n          children: currentPrompt.explanation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prompt-options enhanced\",\n          children: currentPrompt.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `prompt-option enhanced ${response === option ? 'selected' : ''}`,\n            onClick: () => handleOptionSelect(option),\n            disabled: loading,\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prompt-actions enhanced\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `prompt-submit enhanced ${!response || loading ? 'disabled' : ''}`,\n            onClick: handleSubmit,\n            disabled: !response || loading,\n            children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"loading-spinner small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 41\n              }, this), \"Saving...\"]\n            }, void 0, true) : forNewUser ? 'Next' : 'Save'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"prompt-skip enhanced\",\n            onClick: handleSkip,\n            disabled: loading,\n            children: \"Skip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 25\n        }, this), forNewUser && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"prompt-note enhanced\",\n          children: \"\\uD83D\\uDCA1 Each answer helps us find friends who truly match your personality and preferences.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prompt-success enhanced\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-icon\",\n          children: \"\\u2705\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Perfect!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: forNewUser ? 'Moving to the next question...' : 'Your response has been saved!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 25\n        }, this), !forNewUser && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"match-impact\",\n          children: [\"This will help us find \", Math.floor(Math.random() * 3) + 2, \" better matches for you!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 337,\n    columnNumber: 9\n  }, this);\n};\n_s(ProfilePrompts, \"o8ZegEe0N+62x7gKNXU8MmKghJE=\", false, function () {\n  return [useAuth];\n});\n_c = ProfilePrompts;\nexport default ProfilePrompts;\nvar _c;\n$RefreshReg$(_c, \"ProfilePrompts\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useAuth","updateUserProfile","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfilePrompts","forNewUser","onComplete","_s","user","setUser","setIsNewUser","currentPrompt","setCurrentPrompt","response","setResponse","submitted","setSubmitted","promptIndex","setPromptIndex","loading","setLoading","progress","setProgress","matchImprovementData","setMatchImprovementData","isProcessing","setIsProcessing","newUserPrompts","id","question","options","category","field","importance","explanation","mapping","existingUserPrompts","prompts","Math","round","length","handleComplete","shouldShowPrompt","lastPromptTime","localStorage","getItem","timeSinceLastPrompt","Date","now","parseInt","oneDayInMs","random","answeredPromptIds","JSON","parse","eligiblePrompts","filter","prompt","includes","randomIndex","floor","improvementData","questionsAnswered","matchQualityIncrease","newPotentialMatches","profileCompleteness","handleOptionSelect","option","handleSubmit","_user$currentPrompt$c","updateData","Array","isArray","prev","setTimeout","answeredPrompts","push","setItem","stringify","toString","err","console","error","timer","clearTimeout","handleSkip","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","width","map","index","disabled","_c","$RefreshReg$"],"sources":["C:/Users/sinha/Desktop/Computing Projects/INFS3059/friend-finder/client/src/components/Profile/ProfilePromptsEnhanced.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport { updateUserProfile } from '../../services/api';\r\nimport '../../styles/profile.css';\r\n\r\nconst ProfilePrompts = ({ forNewUser, onComplete }) => {\r\n    const { user, setUser, setIsNewUser } = useAuth();\r\n    const [currentPrompt, setCurrentPrompt] = useState(null);\r\n    const [response, setResponse] = useState('');\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [promptIndex, setPromptIndex] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [progress, setProgress] = useState(0);\r\n    const [matchImprovementData, setMatchImprovementData] = useState(null);\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n    // Comprehensive questionnaire for new users (8-10 questions)\r\n    const newUserPrompts = useMemo(() => [\r\n        {\r\n            id: 'communication_style',\r\n            question: 'How do you prefer to communicate with friends?',\r\n            options: ['Text messaging', 'Voice calls', 'Video chats', 'In-person meetups', 'Social media'],\r\n            category: 'socialPreferences',\r\n            field: 'communicationStyle',\r\n            importance: 'high',\r\n            explanation: 'This helps us match you with friends who communicate in similar ways.'\r\n        },\r\n        {\r\n            id: 'social_energy',\r\n            question: 'After socializing, do you typically feel:',\r\n            options: ['Energized and ready for more', 'It depends on the people', 'Drained and needing alone time'],\r\n            category: 'socialPreferences',\r\n            field: 'socialEnergy',\r\n            mapping: {\r\n                'Energized and ready for more': 'Extrovert',\r\n                'It depends on the people': 'Ambivert',\r\n                'Drained and needing alone time': 'Introvert'\r\n            },\r\n            importance: 'high',\r\n            explanation: 'Understanding your social energy helps us find compatible friends.'\r\n        },\r\n        {\r\n            id: 'weekend_activity',\r\n            question: 'What\\'s your ideal weekend activity?',\r\n            options: ['Outdoor adventures', 'Cultural events', 'Relaxing at home', 'Social gatherings', 'Sports', 'Creative projects'],\r\n            category: 'lifestyle',\r\n            field: 'weekendPlans',\r\n            importance: 'high',\r\n            explanation: 'Shared weekend preferences lead to better friendships.'\r\n        },\r\n        {\r\n            id: 'friendship_value',\r\n            question: 'What do you value most in a friendship?',\r\n            options: ['Loyalty', 'Honesty', 'Similar interests', 'Good conversation', 'Emotional support', 'Fun and humor'],\r\n            category: 'values',\r\n            field: 'friendshipValues',\r\n            importance: 'high',\r\n            explanation: 'Core values alignment is crucial for lasting friendships.'\r\n        },\r\n        {\r\n            id: 'activity_level',\r\n            question: 'How would you describe your activity level?',\r\n            options: ['Very active (daily exercise)', 'Moderately active (few times a week)', 'Occasionally active', 'Prefer low-activity'],\r\n            category: 'lifestyle',\r\n            field: 'activityLevel',\r\n            importance: 'medium',\r\n            explanation: 'Activity level compatibility helps with shared activities.'\r\n        },\r\n        {\r\n            id: 'time_availability',\r\n            question: 'When are you usually available to hang out?',\r\n            options: ['Weekday evenings', 'Weekend days', 'Weekend evenings', 'Flexible schedule', 'Lunch breaks'],\r\n            category: 'lifestyle',\r\n            field: 'availability',\r\n            importance: 'medium',\r\n            explanation: 'Matching schedules makes it easier to spend time together.'\r\n        },\r\n        {\r\n            id: 'group_size_preference',\r\n            question: 'Do you prefer hanging out:',\r\n            options: ['One-on-one', 'Small groups (2-4 people)', 'Medium groups (5-8 people)', 'Large groups (9+ people)', 'No preference'],\r\n            category: 'socialPreferences',\r\n            field: 'groupSizePreference',\r\n            importance: 'medium',\r\n            explanation: 'Group size preferences help us suggest the right social settings.'\r\n        },\r\n        {\r\n            id: 'conversation_topics',\r\n            question: 'What topics do you enjoy discussing most?',\r\n            options: ['Current events', 'Personal growth', 'Hobbies & interests', 'Work & career', 'Pop culture', 'Deep philosophical topics'],\r\n            category: 'socialPreferences',\r\n            field: 'conversationTopics',\r\n            importance: 'medium',\r\n            explanation: 'Shared conversation interests lead to more engaging interactions.'\r\n        }\r\n    ], []);\r\n\r\n    // Shorter questionnaire for existing users (2-3 questions)\r\n    const existingUserPrompts = useMemo(() => [\r\n        {\r\n            id: 'recent_interests',\r\n            question: 'What new interests have you developed lately?',\r\n            options: ['Fitness & wellness', 'Creative arts', 'Technology', 'Travel planning', 'Cooking', 'Gaming', 'Reading', 'None recently'],\r\n            category: 'interests',\r\n            field: 'recentInterests',\r\n            importance: 'medium',\r\n            explanation: 'New interests help us find fresh connections.'\r\n        },\r\n        {\r\n            id: 'friendship_goals',\r\n            question: 'What are you looking for in new friendships right now?',\r\n            options: ['Activity partners', 'Deep conversations', 'Casual hangouts', 'Professional networking', 'Study/work buddies'],\r\n            category: 'socialPreferences',\r\n            field: 'friendshipGoals',\r\n            importance: 'high',\r\n            explanation: 'Understanding your current friendship goals helps us make better matches.'\r\n        },\r\n        {\r\n            id: 'communication_frequency',\r\n            question: 'How often do you like to stay in touch with friends?',\r\n            options: ['Daily check-ins', 'Few times a week', 'Weekly catch-ups', 'Bi-weekly', 'Monthly or less'],\r\n            category: 'socialPreferences',\r\n            field: 'communicationFrequency',\r\n            importance: 'medium',\r\n            explanation: 'Communication frequency preferences prevent mismatched expectations.'\r\n        }\r\n    ], []);\r\n\r\n    // Memoize the prompts array based on user type\r\n    const prompts = useMemo(() => {\r\n        return forNewUser ? newUserPrompts : existingUserPrompts;\r\n    }, [forNewUser, newUserPrompts, existingUserPrompts]);\r\n\r\n    // Calculate progress for new users\r\n    useEffect(() => {\r\n        if (forNewUser) {\r\n            setProgress(Math.round((promptIndex / prompts.length) * 100));\r\n        }\r\n    }, [promptIndex, prompts.length, forNewUser]);\r\n\r\n    // Initialize prompt for user\r\n    useEffect(() => {\r\n        if (!user) return;\r\n        \r\n        if (forNewUser) {\r\n            if (promptIndex < prompts.length) {\r\n                setCurrentPrompt(prompts[promptIndex]);\r\n                setSubmitted(false);\r\n                setResponse('');\r\n            } else {\r\n                // All prompts completed for new user\r\n                handleComplete();\r\n            }\r\n            return;\r\n        }\r\n        \r\n        // For existing users, show prompts occasionally\r\n        const shouldShowPrompt = () => {\r\n            const lastPromptTime = localStorage.getItem('lastPromptTime');\r\n            if (lastPromptTime) {\r\n                const timeSinceLastPrompt = Date.now() - parseInt(lastPromptTime);\r\n                const oneDayInMs = 24 * 60 * 60 * 1000;\r\n                if (timeSinceLastPrompt < oneDayInMs) {\r\n                    return false;\r\n                }\r\n            }\r\n            return Math.random() < 0.3;\r\n        };\r\n\r\n        if (shouldShowPrompt()) {\r\n            const answeredPromptIds = JSON.parse(localStorage.getItem('answeredPrompts') || '[]');\r\n            const eligiblePrompts = prompts.filter(prompt => !answeredPromptIds.includes(prompt.id));\r\n            \r\n            if (eligiblePrompts.length > 0) {\r\n                const randomIndex = Math.floor(Math.random() * eligiblePrompts.length);\r\n                setCurrentPrompt(eligiblePrompts[randomIndex]);\r\n                setSubmitted(false);\r\n                setResponse('');\r\n            }\r\n        }\r\n    }, [user, promptIndex, forNewUser, prompts]);\r\n\r\n    const handleComplete = useCallback(() => {\r\n        if (setIsNewUser) {\r\n            setIsNewUser(false);\r\n        }\r\n        if (onComplete) {\r\n            onComplete();\r\n        }\r\n        \r\n        // Show match improvement data\r\n        const improvementData = {\r\n            questionsAnswered: forNewUser ? prompts.length : 1,\r\n            matchQualityIncrease: forNewUser ? 45 : 15,\r\n            newPotentialMatches: forNewUser ? 12 : 3,\r\n            profileCompleteness: forNewUser ? 85 : (user.profileCompleteness || 60) + 10\r\n        };\r\n        setMatchImprovementData(improvementData);\r\n    }, [setIsNewUser, onComplete, forNewUser, prompts.length, user]);\r\n\r\n    const handleOptionSelect = useCallback((option) => {\r\n        setResponse(option);\r\n    }, []);\r\n\r\n    const handleSubmit = useCallback(async () => {\r\n        if (!response || !currentPrompt || loading) return;\r\n        \r\n        setLoading(true);\r\n        try {\r\n            const updateData = {};\r\n            \r\n            // Create nested structure if needed\r\n            if (!user[currentPrompt.category]) {\r\n                updateData[currentPrompt.category] = {};\r\n            } else {\r\n                updateData[currentPrompt.category] = { ...user[currentPrompt.category] };\r\n            }\r\n            \r\n            // Handle mapped values\r\n            if (currentPrompt.mapping && currentPrompt.mapping[response]) {\r\n                updateData[currentPrompt.category][currentPrompt.field] = currentPrompt.mapping[response];\r\n            } else if (Array.isArray(user[currentPrompt.category]?.[currentPrompt.field])) {\r\n                updateData[currentPrompt.category][currentPrompt.field] = [\r\n                    ...(user[currentPrompt.category][currentPrompt.field] || []),\r\n                    response\r\n                ];\r\n            } else {\r\n                updateData[currentPrompt.category][currentPrompt.field] = response;\r\n            }\r\n            \r\n            // Update user context immediately for responsiveness\r\n            if (setUser) {\r\n                setUser(prev => ({\r\n                    ...prev,\r\n                    [currentPrompt.category]: {\r\n                        ...(prev[currentPrompt.category] || {}),\r\n                        [currentPrompt.field]: updateData[currentPrompt.category][currentPrompt.field]\r\n                    }\r\n                }));\r\n            }\r\n            \r\n            // Move to next question immediately, API call in background\r\n            setSubmitted(true);\r\n            \r\n            // For new users, move to next prompt quickly\r\n            if (forNewUser) {\r\n                setTimeout(() => {\r\n                    setPromptIndex(prev => prev + 1);\r\n                }, 800); // Reduced from 1500ms\r\n            } else {\r\n                // For existing users, show completion\r\n                setTimeout(() => {\r\n                    handleComplete();\r\n                }, 1000); // Reduced from 2000ms\r\n            }\r\n            \r\n            // API call happens in background\r\n            await updateUserProfile(updateData);\r\n            \r\n            // Record answered prompt\r\n            const answeredPrompts = JSON.parse(localStorage.getItem('answeredPrompts') || '[]');\r\n            answeredPrompts.push(currentPrompt.id);\r\n            localStorage.setItem('answeredPrompts', JSON.stringify(answeredPrompts));\r\n            localStorage.setItem('lastPromptTime', Date.now().toString());\r\n            \r\n        } catch (err) {\r\n            console.error('Error updating profile with prompt response:', err);\r\n            // Don't block UI for API errors - could show a toast notification instead\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [response, currentPrompt, loading, user, setUser, forNewUser, handleComplete]);\r\n\r\n    // Auto-submit when response changes\r\n    useEffect(() => {\r\n        if (response && currentPrompt && !submitted) {\r\n            const timer = setTimeout(() => {\r\n                handleSubmit();\r\n            }, 500); // Small delay for user to see selection\r\n            \r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [response, currentPrompt, submitted, handleSubmit]);\r\n\r\n    const handleSkip = useCallback(() => {\r\n        if (forNewUser) {\r\n            setPromptIndex(prev => prev + 1);\r\n        } else {\r\n            setCurrentPrompt(null);\r\n        }\r\n    }, [forNewUser]);\r\n\r\n    // Show match improvement results\r\n    if (matchImprovementData) {\r\n        return (\r\n            <div className=\"match-improvement-results\">\r\n                <div className=\"improvement-header\">\r\n                    <h3>🎉 Great! Your profile just got better!</h3>\r\n                    <p>Here's how your responses are helping us find better matches:</p>\r\n                </div>\r\n                \r\n                <div className=\"improvement-stats\">\r\n                    <div className=\"stat-item\">\r\n                        <div className=\"stat-number\">+{matchImprovementData.matchQualityIncrease}%</div>\r\n                        <div className=\"stat-label\">Match Quality Increase</div>\r\n                    </div>\r\n                    <div className=\"stat-item\">\r\n                        <div className=\"stat-number\">+{matchImprovementData.newPotentialMatches}</div>\r\n                        <div className=\"stat-label\">New Potential Matches</div>\r\n                    </div>\r\n                    <div className=\"stat-item\">\r\n                        <div className=\"stat-number\">{matchImprovementData.profileCompleteness}%</div>\r\n                        <div className=\"stat-label\">Profile Complete</div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"improvement-explanation\">\r\n                    <p>\r\n                        📊 Your answers help our algorithm understand your preferences better. \r\n                        The more you tell us, the better matches we can find!\r\n                    </p>\r\n                </div>\r\n                \r\n                <button \r\n                    className=\"continue-button\"\r\n                    onClick={() => setMatchImprovementData(null)}\r\n                >\r\n                    Continue to Dashboard\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!currentPrompt || !user) return null;\r\n    \r\n    return (\r\n        <div className=\"profile-prompt-container enhanced\">\r\n            {/* Progress bar for new users */}\r\n            {forNewUser && (\r\n                <div className=\"questionnaire-progress\">\r\n                    <div className=\"progress-header\">\r\n                        <span>Question {promptIndex + 1} of {prompts.length}</span>\r\n                        <span>{progress}% complete</span>\r\n                    </div>\r\n                    <div className=\"progress-bar\">\r\n                        <div \r\n                            className=\"progress-fill\" \r\n                            style={{ width: `${progress}%` }}\r\n                        ></div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            \r\n            <div className=\"profile-prompt-card enhanced\">\r\n                {!submitted ? (\r\n                    <>\r\n                        <div className=\"prompt-header\">\r\n                            <h3>{forNewUser ? '👋 Let\\'s get to know you!' : '💡 Quick Question'}</h3>\r\n                            <div className=\"importance-indicator\">\r\n                                <span className={`importance-badge ${currentPrompt.importance}`}>\r\n                                    {currentPrompt.importance === 'high' ? '⭐ Important' : '📈 Helpful'}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <p className=\"prompt-question\">{currentPrompt.question}</p>\r\n                        \r\n                        {currentPrompt.explanation && (\r\n                            <p className=\"prompt-explanation\">{currentPrompt.explanation}</p>\r\n                        )}\r\n                        \r\n                        <div className=\"prompt-options enhanced\">\r\n                            {currentPrompt.options.map((option, index) => (\r\n                                <button\r\n                                    key={index}\r\n                                    className={`prompt-option enhanced ${response === option ? 'selected' : ''}`}\r\n                                    onClick={() => handleOptionSelect(option)}\r\n                                    disabled={loading}\r\n                                >\r\n                                    {option}\r\n                                </button>\r\n                            ))}\r\n                        </div>\r\n                        \r\n                        <div className=\"prompt-actions enhanced\">\r\n                            <button \r\n                                className={`prompt-submit enhanced ${!response || loading ? 'disabled' : ''}`}\r\n                                onClick={handleSubmit}\r\n                                disabled={!response || loading}\r\n                            >\r\n                                {loading ? (\r\n                                    <>\r\n                                        <span className=\"loading-spinner small\"></span>\r\n                                        Saving...\r\n                                    </>\r\n                                ) : (\r\n                                    forNewUser ? 'Next' : 'Save'\r\n                                )}\r\n                            </button>\r\n                            \r\n                            <button \r\n                                className=\"prompt-skip enhanced\"\r\n                                onClick={handleSkip}\r\n                                disabled={loading}\r\n                            >\r\n                                Skip\r\n                            </button>\r\n                        </div>\r\n                        \r\n                        {forNewUser && (\r\n                            <p className=\"prompt-note enhanced\">\r\n                                💡 Each answer helps us find friends who truly match your personality and preferences.\r\n                            </p>\r\n                        )}\r\n                    </>\r\n                ) : (\r\n                    <div className=\"prompt-success enhanced\">\r\n                        <div className=\"success-icon\">✅</div>\r\n                        <h3>Perfect!</h3>\r\n                        <p>{forNewUser ? 'Moving to the next question...' : 'Your response has been saved!'}</p>\r\n                        {!forNewUser && (\r\n                            <p className=\"match-impact\">\r\n                                This will help us find {Math.floor(Math.random() * 3) + 2} better matches for you!\r\n                            </p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfilePrompts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}