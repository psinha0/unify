{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nexport const registerUser = async userData => {\n  try {\n    const response = await axios.post(`${API_URL}/auth/register`, userData);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nexport const loginUser = async credentials => {\n  try {\n    const response = await axios.post(`${API_URL}/auth/login`, credentials);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\n// Fetch the user's friends\nexport const fetchFriends = async () => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await axios.get(`${API_URL}/matching/friends`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : new Error('Network error');\n  }\n};\n\n// Fetch potential friends for matching\nexport const fetchPotentialFriends = async () => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await axios.get(`${API_URL}/matching/potential-friends`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : new Error('Network error');\n  }\n};\n\n// Send a friend request to another user\nexport const sendFriendRequest = async friendId => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await axios.post(`${API_URL}/matching/match`, {\n      friendId\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : new Error('Network error');\n  }\n};\n\n// Get pending friend requests\nexport const getFriendRequests = async () => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await axios.get(`${API_URL}/matching/requests`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : new Error('Network error');\n  }\n};\n\n// Accept a friend request\nexport const acceptFriendRequest = async requestId => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await axios.post(`${API_URL}/matching/requests/${requestId}/accept`, {}, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : new Error('Network error');\n  }\n};\nexport const sendMessage = async messageData => {\n  try {\n    const response = await axios.post(`${API_URL}/messaging/send`, messageData);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","registerUser","userData","response","post","data","error","loginUser","credentials","fetchFriends","token","localStorage","getItem","get","headers","Authorization","Error","fetchPotentialFriends","sendFriendRequest","friendId","getFriendRequests","acceptFriendRequest","requestId","sendMessage","messageData"],"sources":["C:/Users/sinha/Desktop/Computing Projects/INFS3059/friend-finder/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nexport const registerUser = async (userData) => {\n    try {\n        const response = await axios.post(`${API_URL}/auth/register`, userData);\n        return response.data;\n    } catch (error) {\n        throw error.response.data;\n    }\n};\n\nexport const loginUser = async (credentials) => {\n    try {\n        const response = await axios.post(`${API_URL}/auth/login`, credentials);\n        return response.data;\n    } catch (error) {\n        throw error.response.data;\n    }\n};\n\n// Fetch the user's friends\nexport const fetchFriends = async () => {\n    try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get(`${API_URL}/matching/friends`, {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        });\n        return response.data;\n    } catch (error) {\n        throw error.response ? error.response.data : new Error('Network error');\n    }\n};\n\n// Fetch potential friends for matching\nexport const fetchPotentialFriends = async () => {\n    try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get(`${API_URL}/matching/potential-friends`, {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        });\n        return response.data;\n    } catch (error) {\n        throw error.response ? error.response.data : new Error('Network error');\n    }\n};\n\n// Send a friend request to another user\nexport const sendFriendRequest = async (friendId) => {\n    try {\n        const token = localStorage.getItem('token');\n        const response = await axios.post(`${API_URL}/matching/match`, \n            { friendId },\n            {\n                headers: {\n                    Authorization: `Bearer ${token}`\n                }\n            }\n        );\n        return response.data;\n    } catch (error) {\n        throw error.response ? error.response.data : new Error('Network error');\n    }\n};\n\n// Get pending friend requests\nexport const getFriendRequests = async () => {\n    try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get(`${API_URL}/matching/requests`, {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        });\n        return response.data;\n    } catch (error) {\n        throw error.response ? error.response.data : new Error('Network error');\n    }\n};\n\n// Accept a friend request\nexport const acceptFriendRequest = async (requestId) => {\n    try {\n        const token = localStorage.getItem('token');\n        const response = await axios.post(\n            `${API_URL}/matching/requests/${requestId}/accept`, \n            {},\n            {\n                headers: {\n                    Authorization: `Bearer ${token}`\n                }\n            }\n        );\n        return response.data;\n    } catch (error) {\n        throw error.response ? error.response.data : new Error('Network error');\n    }\n};\n\nexport const sendMessage = async (messageData) => {\n    try {\n        const response = await axios.post(`${API_URL}/messaging/send`, messageData);\n        return response.data;\n    } catch (error) {\n        throw error.response.data;\n    }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}