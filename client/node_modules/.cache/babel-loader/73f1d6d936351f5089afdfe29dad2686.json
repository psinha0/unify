{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sinha\\\\Desktop\\\\Computing Projects\\\\INFS3059\\\\friend-finder\\\\client\\\\src\\\\components\\\\Dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useAuth } from '../../hooks/useAuth';\nimport FriendCard from '../Matching/FriendCard';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [friends, setFriends] = React.useState([]);\n\n  // Fetch friends data from the API\n  React.useEffect(() => {\n    const fetchFriends = async () => {\n      if (user && user.id) {\n        try {\n          // This is a placeholder - in a real app, you'd fetch from your API\n          // const response = await fetch(`/api/matching/friends/${user.id}`);\n          // const data = await response.json();\n          // setFriends(data);\n\n          // Placeholder data for testing\n          setFriends([{\n            id: 1,\n            name: 'Jane Doe',\n            interests: ['Reading', 'Hiking'],\n            profilePicture: 'https://via.placeholder.com/150'\n          }, {\n            id: 2,\n            name: 'John Smith',\n            interests: ['Gaming', 'Cooking'],\n            profilePicture: 'https://via.placeholder.com/150'\n          }]);\n        } catch (error) {\n          console.error('Error fetching friends:', error);\n        }\n      }\n    };\n    fetchFriends();\n  }, [user]);\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", user.email || 'Friend', \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"friend-list\",\n      children: friends.length > 0 ? friends.map(friend => /*#__PURE__*/_jsxDEV(FriendCard, {\n        friend: friend\n      }, friend.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No friends found. Start matching!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"op0nIg/CPQDxqdX7aGJeXTBJbyA=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useAuth","FriendCard","jsxDEV","_jsxDEV","Dashboard","_s","user","friends","setFriends","useState","useEffect","fetchFriends","id","name","interests","profilePicture","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","email","length","map","friend","_c","$RefreshReg$"],"sources":["C:/Users/sinha/Desktop/Computing Projects/INFS3059/friend-finder/client/src/components/Dashboard/Dashboard.jsx"],"sourcesContent":["import React from 'react';\nimport { useAuth } from '../../hooks/useAuth';\nimport FriendCard from '../Matching/FriendCard';\nimport './Dashboard.css';\n\nconst Dashboard = () => {\n    const { user } = useAuth();\n    const [friends, setFriends] = React.useState([]);\n\n    // Fetch friends data from the API\n    React.useEffect(() => {\n        const fetchFriends = async () => {\n            if (user && user.id) {\n                try {\n                    // This is a placeholder - in a real app, you'd fetch from your API\n                    // const response = await fetch(`/api/matching/friends/${user.id}`);\n                    // const data = await response.json();\n                    // setFriends(data);\n                    \n                    // Placeholder data for testing\n                    setFriends([\n                        { id: 1, name: 'Jane Doe', interests: ['Reading', 'Hiking'], profilePicture: 'https://via.placeholder.com/150' },\n                        { id: 2, name: 'John Smith', interests: ['Gaming', 'Cooking'], profilePicture: 'https://via.placeholder.com/150' },\n                    ]);\n                } catch (error) {\n                    console.error('Error fetching friends:', error);\n                }\n            }\n        };\n        \n        fetchFriends();\n    }, [user]);\n\n    if (!user) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div className=\"dashboard\">\n            <h1>Welcome, {user.email || 'Friend'}!</h1>\n            <h2>Your Friends</h2>\n            <div className=\"friend-list\">\n                {friends.length > 0 ? friends.map(friend => (\n                    <FriendCard key={friend.id} friend={friend} />\n                )) : <p>No friends found. Start matching!</p>}\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,qBAAqB;AAC7C,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAK,CAAC,GAAGN,OAAO,CAAC,CAAC;EAC1B,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACAV,KAAK,CAACW,SAAS,CAAC,MAAM;IAClB,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAIL,IAAI,IAAIA,IAAI,CAACM,EAAE,EAAE;QACjB,IAAI;UACA;UACA;UACA;UACA;;UAEA;UACAJ,UAAU,CAAC,CACP;YAAEI,EAAE,EAAE,CAAC;YAAEC,IAAI,EAAE,UAAU;YAAEC,SAAS,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;YAAEC,cAAc,EAAE;UAAkC,CAAC,EAChH;YAAEH,EAAE,EAAE,CAAC;YAAEC,IAAI,EAAE,YAAY;YAAEC,SAAS,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC;YAAEC,cAAc,EAAE;UAAkC,CAAC,CACrH,CAAC;QACN,CAAC,CAAC,OAAOC,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACnD;MACJ;IACJ,CAAC;IAEDL,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;EAEV,IAAI,CAACA,IAAI,EAAE;IACP,oBAAOH,OAAA;MAAAe,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,oBACInB,OAAA;IAAKoB,SAAS,EAAC,WAAW;IAAAL,QAAA,gBACtBf,OAAA;MAAAe,QAAA,GAAI,WAAS,EAACZ,IAAI,CAACkB,KAAK,IAAI,QAAQ,EAAC,GAAC;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3CnB,OAAA;MAAAe,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBnB,OAAA;MAAKoB,SAAS,EAAC,aAAa;MAAAL,QAAA,EACvBX,OAAO,CAACkB,MAAM,GAAG,CAAC,GAAGlB,OAAO,CAACmB,GAAG,CAACC,MAAM,iBACpCxB,OAAA,CAACF,UAAU;QAAiB0B,MAAM,EAAEA;MAAO,GAA1BA,MAAM,CAACf,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAChD,CAAC,gBAAGnB,OAAA;QAAAe,QAAA,EAAG;MAAiC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACjB,EAAA,CA3CID,SAAS;EAAA,QACMJ,OAAO;AAAA;AAAA4B,EAAA,GADtBxB,SAAS;AA6Cf,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}