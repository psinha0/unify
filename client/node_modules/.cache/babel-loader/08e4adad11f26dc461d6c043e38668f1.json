{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sinha\\\\Desktop\\\\Computing Projects\\\\INFS3059\\\\friend-finder\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { registerUser, loginUser } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [isNewUser, setIsNewUser] = useState(false);\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      // Use the API service to login\n      const data = await loginUser({\n        email,\n        password\n      });\n\n      // Store token in localStorage\n      localStorage.setItem('token', data.token);\n\n      // Check if user is new (no questionnaire data) - use lastQuestionnaireDate\n      const isUserNew = !data.user.lastQuestionnaireDate;\n      console.log('Login - User data:', data.user.username, 'lastQuestionnaireDate:', data.user.lastQuestionnaireDate, 'isNewUser:', isUserNew);\n      setIsNewUser(isUserNew);\n\n      // Set user info from response\n      setUser(data.user);\n      return data;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = async () => {\n    try {\n      setLoading(true);\n      // Remove token from localStorage\n      localStorage.removeItem('token');\n      setUser(null);\n    } catch (error) {\n      console.error('Logout error:', error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async userData => {\n    try {\n      setLoading(true);\n      // Use the API service to register\n      const data = await registerUser(userData);\n      return data;\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Check if user is logged in when app loads\n  useEffect(() => {\n    let isMounted = true;\n    const checkLoggedIn = async () => {\n      try {\n        if (isMounted) setLoading(true);\n        const token = localStorage.getItem('token');\n        if (!token) {\n          if (isMounted) {\n            setUser(null);\n            setLoading(false);\n          }\n          return;\n        }\n\n        // Small delay to ensure server is ready\n        await new Promise(resolve => setTimeout(resolve, 100));\n\n        // Try to get user profile using the token\n        try {\n          const API_URL = window.REACT_APP_API_URL || 'http://localhost:5000/api';\n          const response = await fetch(`${API_URL}/profile`, {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          if (response.ok) {\n            const userData = await response.json();\n            if (isMounted) {\n              setUser(userData);\n\n              // Check if user is new (no questionnaire data) - use lastQuestionnaireDate\n              const isUserNew = !userData.lastQuestionnaireDate;\n              console.log('Token validation - User data:', userData.username, 'lastQuestionnaireDate:', userData.lastQuestionnaireDate, 'isNewUser:', isUserNew);\n              setIsNewUser(isUserNew);\n            }\n          } else {\n            // Token is invalid or expired\n            localStorage.removeItem('token');\n            if (isMounted) {\n              setUser(null);\n              setIsNewUser(false);\n            }\n          }\n        } catch (fetchError) {\n          console.error('Token validation error:', fetchError);\n          localStorage.removeItem('token');\n          if (isMounted) {\n            setUser(null);\n            setIsNewUser(false);\n          }\n        }\n      } catch (error) {\n        console.error('Auth check error:', error);\n        localStorage.removeItem('token');\n        if (isMounted) {\n          setUser(null);\n          setIsNewUser(false);\n        }\n      } finally {\n        if (isMounted) setLoading(false);\n      }\n    };\n    checkLoggedIn();\n\n    // Cleanup function\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      setUser,\n      loading,\n      login,\n      logout,\n      register,\n      isNewUser,\n      setIsNewUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"iRj2EgN99hJcqhNhP/bH1ukoj8w=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","registerUser","loginUser","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","isNewUser","setIsNewUser","login","email","password","data","localStorage","setItem","token","isUserNew","lastQuestionnaireDate","console","log","username","error","logout","removeItem","register","userData","isMounted","checkLoggedIn","getItem","Promise","resolve","setTimeout","API_URL","window","REACT_APP_API_URL","response","fetch","headers","ok","json","fetchError","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/sinha/Desktop/Computing Projects/INFS3059/friend-finder/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { registerUser, loginUser } from '../services/api';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [isNewUser, setIsNewUser] = useState(false);\n\n    const login = async (email, password) => {\n        try {\n            setLoading(true);\n            // Use the API service to login\n            const data = await loginUser({ email, password });\n            \n            // Store token in localStorage\n            localStorage.setItem('token', data.token);\n            \n            // Check if user is new (no questionnaire data) - use lastQuestionnaireDate\n            const isUserNew = !data.user.lastQuestionnaireDate;\n            console.log('Login - User data:', data.user.username, 'lastQuestionnaireDate:', data.user.lastQuestionnaireDate, 'isNewUser:', isUserNew);\n            setIsNewUser(isUserNew);\n            \n            // Set user info from response\n            setUser(data.user);\n            return data;\n        } catch (error) {\n            console.error('Login error:', error);\n            throw error;\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const logout = async () => {\n        try {\n            setLoading(true);\n            // Remove token from localStorage\n            localStorage.removeItem('token');\n            setUser(null);\n        } catch (error) {\n            console.error('Logout error:', error);\n            throw error;\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const register = async (userData) => {\n        try {\n            setLoading(true);\n            // Use the API service to register\n            const data = await registerUser(userData);\n            return data;\n        } catch (error) {\n            console.error('Registration error:', error);\n            throw error;\n        } finally {\n            setLoading(false);\n        }\n    };\n    \n    // Check if user is logged in when app loads\n    useEffect(() => {\n        let isMounted = true;\n        \n        const checkLoggedIn = async () => {\n            try {\n                if (isMounted) setLoading(true);\n                const token = localStorage.getItem('token');\n                \n                if (!token) {\n                    if (isMounted) {\n                        setUser(null);\n                        setLoading(false);\n                    }\n                    return;\n                }\n                \n                // Small delay to ensure server is ready\n                await new Promise(resolve => setTimeout(resolve, 100));\n                \n                // Try to get user profile using the token\n                try {\n                    const API_URL = window.REACT_APP_API_URL || 'http://localhost:5000/api';\n                    const response = await fetch(`${API_URL}/profile`, {\n                        headers: {\n                            'Authorization': `Bearer ${token}`\n                        }\n                    });\n                    \n                    if (response.ok) {\n                        const userData = await response.json();\n                        if (isMounted) {\n                            setUser(userData);\n                            \n                            // Check if user is new (no questionnaire data) - use lastQuestionnaireDate\n                            const isUserNew = !userData.lastQuestionnaireDate;\n                            console.log('Token validation - User data:', userData.username, 'lastQuestionnaireDate:', userData.lastQuestionnaireDate, 'isNewUser:', isUserNew);\n                            setIsNewUser(isUserNew);\n                        }\n                    } else {\n                        // Token is invalid or expired\n                        localStorage.removeItem('token');\n                        if (isMounted) {\n                            setUser(null);\n                            setIsNewUser(false);\n                        }\n                    }\n                } catch (fetchError) {\n                    console.error('Token validation error:', fetchError);\n                    localStorage.removeItem('token');\n                    if (isMounted) {\n                        setUser(null);\n                        setIsNewUser(false);\n                    }\n                }\n            } catch (error) {\n                console.error('Auth check error:', error);\n                localStorage.removeItem('token');\n                if (isMounted) {\n                    setUser(null);\n                    setIsNewUser(false);\n                }\n            } finally {\n                if (isMounted) setLoading(false);\n            }\n        };\n        \n        checkLoggedIn();\n        \n        // Cleanup function\n        return () => {\n            isMounted = false;\n        };\n    }, []);\n\n    return (\n        <AuthContext.Provider value={{ user, setUser, loading, login, logout, register, isNewUser, setIsNewUser }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}